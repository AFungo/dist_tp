# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import airline_service_pb2 as airline__service__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in airline_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AirlineServiceStub(object):
    """The Airline Service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllFlights = channel.unary_unary(
                '/AirlineService/GetAllFlights',
                request_serializer=airline__service__pb2.AllFlightsRequest.SerializeToString,
                response_deserializer=airline__service__pb2.AllFlightsReply.FromString,
                _registered_method=True)
        self.GetSeatsAvailable = channel.unary_unary(
                '/AirlineService/GetSeatsAvailable',
                request_serializer=airline__service__pb2.SeatsAvailableRequest.SerializeToString,
                response_deserializer=airline__service__pb2.SeatsAvailableReply.FromString,
                _registered_method=True)
        self.Reserve = channel.unary_unary(
                '/AirlineService/Reserve',
                request_serializer=airline__service__pb2.ReserveRequest.SerializeToString,
                response_deserializer=airline__service__pb2.ReserveReply.FromString,
                _registered_method=True)
        self.ConfirmReserve = channel.unary_unary(
                '/AirlineService/ConfirmReserve',
                request_serializer=airline__service__pb2.ConfirmReserveRequest.SerializeToString,
                response_deserializer=airline__service__pb2.ConfirmReserveReply.FromString,
                _registered_method=True)
        self.CancelReserve = channel.unary_unary(
                '/AirlineService/CancelReserve',
                request_serializer=airline__service__pb2.CancelReserveRequest.SerializeToString,
                response_deserializer=airline__service__pb2.CancelReserveReply.FromString,
                _registered_method=True)
        self.CancelPurchase = channel.unary_unary(
                '/AirlineService/CancelPurchase',
                request_serializer=airline__service__pb2.CancelReserveRequest.SerializeToString,
                response_deserializer=airline__service__pb2.CancelReserveReply.FromString,
                _registered_method=True)


class AirlineServiceServicer(object):
    """The Airline Service definition.
    """

    def GetAllFlights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSeatsAvailable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reserve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmReserve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelReserve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelPurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AirlineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllFlights': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllFlights,
                    request_deserializer=airline__service__pb2.AllFlightsRequest.FromString,
                    response_serializer=airline__service__pb2.AllFlightsReply.SerializeToString,
            ),
            'GetSeatsAvailable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSeatsAvailable,
                    request_deserializer=airline__service__pb2.SeatsAvailableRequest.FromString,
                    response_serializer=airline__service__pb2.SeatsAvailableReply.SerializeToString,
            ),
            'Reserve': grpc.unary_unary_rpc_method_handler(
                    servicer.Reserve,
                    request_deserializer=airline__service__pb2.ReserveRequest.FromString,
                    response_serializer=airline__service__pb2.ReserveReply.SerializeToString,
            ),
            'ConfirmReserve': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmReserve,
                    request_deserializer=airline__service__pb2.ConfirmReserveRequest.FromString,
                    response_serializer=airline__service__pb2.ConfirmReserveReply.SerializeToString,
            ),
            'CancelReserve': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelReserve,
                    request_deserializer=airline__service__pb2.CancelReserveRequest.FromString,
                    response_serializer=airline__service__pb2.CancelReserveReply.SerializeToString,
            ),
            'CancelPurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelPurchase,
                    request_deserializer=airline__service__pb2.CancelReserveRequest.FromString,
                    response_serializer=airline__service__pb2.CancelReserveReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AirlineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('AirlineService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AirlineService(object):
    """The Airline Service definition.
    """

    @staticmethod
    def GetAllFlights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AirlineService/GetAllFlights',
            airline__service__pb2.AllFlightsRequest.SerializeToString,
            airline__service__pb2.AllFlightsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSeatsAvailable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AirlineService/GetSeatsAvailable',
            airline__service__pb2.SeatsAvailableRequest.SerializeToString,
            airline__service__pb2.SeatsAvailableReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Reserve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AirlineService/Reserve',
            airline__service__pb2.ReserveRequest.SerializeToString,
            airline__service__pb2.ReserveReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfirmReserve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AirlineService/ConfirmReserve',
            airline__service__pb2.ConfirmReserveRequest.SerializeToString,
            airline__service__pb2.ConfirmReserveReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelReserve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AirlineService/CancelReserve',
            airline__service__pb2.CancelReserveRequest.SerializeToString,
            airline__service__pb2.CancelReserveReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelPurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/AirlineService/CancelPurchase',
            airline__service__pb2.CancelReserveRequest.SerializeToString,
            airline__service__pb2.CancelReserveReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
